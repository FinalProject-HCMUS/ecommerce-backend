name: ecommerce backend CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

# Define default environment variables
env:
  JAVA_VERSION: 17
  DOCKER_IMAGE: 21120414/ecommerce-backend
  MAVEN_CACHE_KEY: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [build-and-test, code-quality, package]
    steps:
      # Common setup steps
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4  
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin' 

      - name: Cache Maven dependencies
        uses: actions/cache@v4 
        with:
          path: ~/.m2
          key: ${{ env.MAVEN_CACHE_KEY }}
          restore-keys: ${{ runner.os }}-maven-

      # Task-specific steps
      - name: Build and Test
        if: matrix.task == 'build-and-test'
        run: |
          mvn clean compile
          mvn test

      - name: Code Quality check
        if: matrix.task == 'code-quality'
        run: mvn checkstyle:check

      - name: Package application
        if: matrix.task == 'package'
        run: mvn clean package -DskipTests  # Skip tests since already run

  deploy:
    runs-on: ubuntu-latest
    needs: ci  # Depends on all CI tasks
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ env.MAVEN_CACHE_KEY }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 
        with:
          username: 21120414
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6 
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}  # Add commit-based tagging
          cache-from: type=gha
          cache-to: type=gha,mode=max
